.byte $4e, $45, $53, $1a, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00

* = $8000
C = $d5
D = $bd
E = $a9
F = $9f
G = $8E
A = $7E
REST = $00

LENGTH_32 = $01
LENGTH_16 = $02
LENGTH_8  = $04
LENGTH_QUARTER = $08
LENGTH_HALF = $10
LENGTH_WHOLE = $20

pitch = $40
current = $0

song:
.byte C, LENGTH_QUARTER
.byte C, LENGTH_QUARTER
.byte G, LENGTH_QUARTER
.byte G, LENGTH_QUARTER 
.byte A, LENGTH_QUARTER
.byte A, LENGTH_QUARTER 
.byte G, LENGTH_HALF
.byte F, LENGTH_QUARTER
.byte F, LENGTH_QUARTER
.byte E, LENGTH_QUARTER
.byte E, LENGTH_QUARTER
.byte D, LENGTH_QUARTER
.byte D, LENGTH_QUARTER 
.byte C, LENGTH_WHOLE
.byte REST, LENGTH_WHOLE

reset:
lda #%00000001
sta $4015 ;enable square 1

lda #%10001111 ;Duty 10, Volume F
sta $4000

ldx #0

lda #%10000000
sta $2000
lda #0
sta $2001

main: jmp main

int_vblank:
    cpx #15 * 2
    beq end

    lda $0
    adc #pitch
    sta $0
    bcs play_song
    jmp end

play_song:
    clc

    ;jmp start_note
    cpy #0
    beq start_note
    dey
    jmp end

start_note:
    lda song, x
    sta $4002
    lda #%1000
    sta $4003
    inx

    ; note length
    ldy song, x
    inx

end:
    rti

int_irqbrk:
	rti

; fill the rest of this bank with zeroes
.dsb $bffa-*, 0
.word int_vblank, reset, int_irqbrk