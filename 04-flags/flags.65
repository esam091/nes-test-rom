; header
.byte $4e, $45, $53, $1a, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00

* = $8000

chrdata:
.byte 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0

; checkmark
.byte 0, 0, 0, $38, $1c, $0e, 3, 1, 0,0,0,0,0,0,0,0 
.byte 0, $0e, $1c, $38, $70, $e0, $c0, $80, 0,0,0,0,0,0,0,0

; x mark
.byte 0,0,0,0,0,0,0,0, 0, $18, $0c, $06, 1, $0e, $1c, $38
.byte 0,0,0,0,0,0,0,0, $0e, $38, $70, $e0, $80, $e0, $70, 0

; end marker
.byte $ff

palette:
.byte 13, $1a, $07, $3c, 0,0,0,0, 0,0,0,0, 0,0,0,0

int_reset:
    ; Load pattern table
    
    lda #0
    sta $2006
    sta $2006
    ldx #0

pattern_table:
    lda chrdata, x
    sta $2007
    inx
    cmp #$ff
    bne pattern_table


    ; Load palettes
    lda #$3f
    sta $2006
    lda #$0
    sta $2006

    ldx #$0

palette_table:
    lda palette, x
    sta $2007
    inx
    cpx #$10
    bne palette_table
    
    lda #0
    beq ok

ok:
    lda #$20
    sta $2006
    lda #$30
    sta $2006
    lda #1
    sta $2007
    lda #2
    sta $2007
    jmp done

fail:
    lda #$20
    sta $2006
    lda #$30
    sta $2006
    lda #3
    sta $2007
    lda #4
    sta $2007
    jmp done

; .byte 00000000 00000000
; .byte 00000000 00001110
; .byte 00000000 00011100
; .byte 00111000 00111000
; .byte 00011100 01110000
; .byte 00001110 11100000
; .byte 00000011 11000000
; .byte 00000001 10000000

; .byte 00000000 00011100
; .byte 00011000 00111000
; .byte 00001100 01110000
; .byte 00000110 11100000
; .byte 00000001 10000000
; .byte 00001110 11100000
; .byte 00011100 01110000
; .byte 00111000 00000000

done:
    ; reset PPU 
    lda #0
    sta $2006
    sta $2006
        
    ; enable PPU
    lda #%10001000
    sta $2000
    lda #%00011110
    sta $2001
	
; done, just wait around
main:	jmp main


int_vblank:
int_irqbrk:
	rti

; fill the rest of this bank with zeroes
.dsb $bffa-*, 0

; interrupt vectors
.word int_vblank, int_reset, int_irqbrk