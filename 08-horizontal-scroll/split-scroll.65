; header
.byte $4e, $45, $53, $1a, 01, 01, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00

; load this at $8000
* = $8000

; Colors
palette:
.byte $0d,$13,$28,0, 0,$0a,$16,0, 0,$0a,$16,0, 0,$0a,$16,0
.byte $0d,$13,$28,0, 0,$0a,$16,0, 0,$0a,$16,0, 0,$0a,$16,0

; the beginning
int_reset:
    ; Setup top area sprite
    lda #0
    sta $2003
    lda #$17
    sta $2004
    lda #4
    sta $2004
    lda #1
    sta $2004
    lda #$0
    sta $2004

    ; Setup top area background tile
    lda #$28
    sta $2006
    lda #$60
    sta $2006
    lda #3
    sta $2007

    lda #$2b
    sta $2006
    lda #$c0
    sta $2006
    lda #%01010101
    sta $2007

    lda #$23
    sta $2006
    lda #$a0
    sta $2006

    ldx #0
loop:
    lda #1
    sta $2007
    lda #2
    sta $2007
    inx
    cpx #16
    bne loop

    lda #$27
    sta $2006
    lda #$a0
    sta $2006

    ldx #0
loop2:
    lda #1
    sta $2007
    lda #2
    sta $2007
    inx
    cpx #16
    bne loop2

	; load the palette
	lda #$3f
	sta $2006
	lda #$00
	sta $2006
	ldx #0
ldp:	lda palette,x
	sta $2007
	inx
	cpx #$20
	bne ldp
    
	
	; reset PPU pointer
	; (otherwise everything is offset)
	lda #0
	sta $2006
	sta $2006
	
	; enable PPU
	lda #%10000000
	sta $2000
	lda #%00011110
	sta $2001

    ldx #0
main:	
    wait_vblank:
        bit $2002
        bpl wait_vblank

    ; Render the status bar
    lda #2
    sta $2000

    lda #0
    sta $2005
    sta $2005

    ; Wait until sprit0 hit
    wait_sprite0:
        bit $2002
        bvc wait_sprite0

    ; Render the game content
    lda #0
    sta $2000

    inx
    stx $2005

    lda #0
    sta $2005

    jmp main


int_vblank:
int_irqbrk:
	rti

; fill the rest of this bank with zeroes
.dsb $bffa-*, 0

; except for the interrupt vectors
.word int_vblank, int_reset, int_irqbrk

chrdata:
.byte 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0

; Tile 1
.byte $80,$c0,$e0,$f0,$f8,$fc,$fe,$ff, $7f,$3f,$1f,$0f,$07,$03,$01,$00

; Tile 2
.byte $01,$03,$07,$0f,$1f,$3f,$7f,$ff, $fe,$fc,$f8,$f0,$e0,$c0,$80,$00

; Opaque tile
.byte 0,0,0,0,0,0,0,0, $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff

; Sprite 0 line
.byte 0,0,0,0,0,0,0,$ff, 0,0,0,0,0,0,0,0

chrdata_end:
.dsb $e000-chrdata_end, 0
